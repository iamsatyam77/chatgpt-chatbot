{"version":3,"file":"static/js/105.d2606502.chunk.js","mappings":"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","sources":["styled-components/StyledBadge.tsx","components/Chat/ChatHeader/ChatHeader.tsx","components/Chat/ChatArea/ChatArea.tsx","styled-components/StyledTextarea.tsx","components/Chat/Message/Message.tsx","components/Chat/Chat.tsx"],"sourcesContent":["import { styled } from \"@mui/material/styles\";\r\nimport Badge from \"@mui/material/Badge\";\r\n\r\nexport const StyledBadge = styled(Badge)(({ theme }) => ({\r\n  \"& .MuiBadge-badge\": {\r\n    backgroundColor: \"#44b700\",\r\n    color: \"#44b700\",\r\n    boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n    \"&::after\": {\r\n      position: \"absolute\",\r\n      top: 0,\r\n      left: 0,\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      borderRadius: \"50%\",\r\n      animation: \"ripple 1.2s infinite ease-in-out\",\r\n      border: \"1px solid currentColor\",\r\n      content: '\"\"',\r\n    },\r\n  },\r\n  \"@keyframes ripple\": {\r\n    \"0%\": {\r\n      transform: \"scale(.8)\",\r\n      opacity: 1,\r\n    },\r\n    \"100%\": {\r\n      transform: \"scale(2.4)\",\r\n      opacity: 0,\r\n    },\r\n  },\r\n}));\r\n","import \"./ChatHeader.scss\";\r\n\r\nimport { Avatar, IconButton, Stack, Tooltip, Typography } from \"@mui/material\";\r\nimport { StyledBadge } from \"../../../styled-components/StyledBadge\";\r\nimport { SupportAgent, LogoutRounded } from \"@mui/icons-material\";\r\nimport { deepOrange } from \"@mui/material/colors\";\r\n\r\nimport { useAuth } from \"../../../state/Auth/Auth\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst ChatHeader = () => {\r\n  const auth = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogout = () => {\r\n    auth?.logout();\r\n    navigate(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div className='chat-header'>\r\n      <Stack\r\n        direction='row'\r\n        spacing={2}\r\n        justifyContent='space-between'\r\n        alignItems='center'\r\n      >\r\n        <Stack direction='row' spacing={2}>\r\n          <StyledBadge\r\n            overlap='circular'\r\n            anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n            variant='dot'\r\n          >\r\n            <Avatar sx={{ bgcolor: deepOrange[500] }}>\r\n              <SupportAgent />\r\n            </Avatar>\r\n          </StyledBadge>\r\n\r\n          <Typography variant='h6' alignSelf='center'>\r\n            Chat with Jessica Smith\r\n          </Typography>\r\n        </Stack>\r\n\r\n        <Tooltip title='Logout'>\r\n          <IconButton\r\n            aria-label='send'\r\n            color='secondary'\r\n            onClick={handleLogout}\r\n          >\r\n            <LogoutRounded />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Stack>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatHeader;\r\n","import { Chip, Stack, Box } from \"@mui/material\";\r\nimport { SupportAgent, PermIdentity } from \"@mui/icons-material\";\r\nimport \"./ChatArea.scss\";\r\n\r\nconst ChatArea = () => {\r\n  return (\r\n    <div className='chat-area'>\r\n      <Stack direction='column' gap={1} padding={1}>\r\n        <Box alignSelf='end'>\r\n          <Chip\r\n            icon={<PermIdentity />}\r\n            variant='filled'\r\n            label='Hi'\r\n            color='default'\r\n          />\r\n        </Box>\r\n        <Box>\r\n          <Chip\r\n            icon={<SupportAgent />}\r\n            variant='filled'\r\n            label='Hello, I am your assistant, How may i help you?'\r\n            color='primary'\r\n          />\r\n        </Box>\r\n      </Stack>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatArea;\r\n","import TextareaAutosize from \"@mui/base/TextareaAutosize\";\r\nimport { styled } from \"@mui/system\";\r\n\r\nconst blue = {\r\n  100: \"#DAECFF\",\r\n  200: \"#b6daff\",\r\n  400: \"#3399FF\",\r\n  500: \"#007FFF\",\r\n  600: \"#0072E5\",\r\n  900: \"#003A75\",\r\n};\r\n\r\nconst grey = {\r\n  50: \"#f6f8fa\",\r\n  100: \"#eaeef2\",\r\n  200: \"#d0d7de\",\r\n  300: \"#afb8c1\",\r\n  400: \"#8c959f\",\r\n  500: \"#6e7781\",\r\n  600: \"#57606a\",\r\n  700: \"#424a53\",\r\n  800: \"#32383f\",\r\n  900: \"#24292f\",\r\n};\r\n\r\nexport const StyledTextarea = styled(TextareaAutosize)(\r\n  ({ theme }) => `\r\n    width: 18rem;\r\n    font-family: IBM Plex Sans, sans-serif;\r\n    font-size: 0.875rem;\r\n    font-weight: 400;\r\n    line-height: 1.5;\r\n    padding: 12px;\r\n    border-radius: 12px 12px 0 12px;\r\n    color: ${theme.palette.mode === \"dark\" ? grey[300] : grey[900]};\r\n    background: ${theme.palette.mode === \"dark\" ? grey[900] : \"#fff\"};\r\n    border: 1px solid ${theme.palette.mode === \"dark\" ? grey[700] : grey[200]};\r\n    box-shadow: 0px 2px 2px ${\r\n      theme.palette.mode === \"dark\" ? grey[900] : grey[50]\r\n    };\r\n  \r\n    &:hover {\r\n      border-color: ${blue[400]};\r\n    }\r\n  \r\n    &:focus {\r\n      border-color: ${blue[400]};\r\n      box-shadow: 0 0 0 3px ${\r\n        theme.palette.mode === \"dark\" ? blue[500] : blue[200]\r\n      };\r\n    }\r\n  \r\n    // firefox\r\n    &:focus-visible {\r\n      outline: 0;\r\n    }\r\n\r\n    // resize\r\n    resize: none;\r\n  `\r\n);\r\n","import { StyledTextarea } from \"../../../styled-components/StyledTextarea\";\r\nimport { IconButton, Stack, Tooltip } from \"@mui/material\";\r\nimport { Send } from \"@mui/icons-material\";\r\n\r\nimport \"./Message.scss\";\r\n\r\nconst Message = () => {\r\n  const handleFormSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <div className='message-container'>\r\n      <form onSubmit={handleFormSubmit}>\r\n        <Stack direction='row'>\r\n          <StyledTextarea\r\n            maxRows={2}\r\n            aria-label='maximum height'\r\n            placeholder='Type your message here....'\r\n          />\r\n\r\n          <Tooltip title='Send'>\r\n            <IconButton aria-label='send' color='secondary' type='submit'>\r\n              <Send />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Stack>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import { Stack } from \"@mui/material\";\r\n\r\nimport ChatHeader from \"./ChatHeader/ChatHeader\";\r\nimport ChatArea from \"./ChatArea/ChatArea\";\r\nimport Message from \"./Message/Message\";\r\n\r\nimport \"./Chat.scss\";\r\n\r\nconst Chat = () => {\r\n  return (\r\n    <Stack\r\n      direction='column'\r\n      gap='1rem'\r\n      justifyContent='space-between'\r\n      alignItems='center'\r\n      padding='1rem'\r\n      className='chat-container'\r\n    >\r\n      <Stack direction='column' gap='1rem'>\r\n        <ChatHeader />\r\n        <ChatArea />\r\n      </Stack>\r\n      <Message />\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"],"names":["StyledBadge","styled","Badge","_ref","theme","backgroundColor","color","boxShadow","concat","palette","background","paper","position","top","left","width","height","borderRadius","animation","border","content","transform","opacity","auth","useAuth","navigate","useNavigate","_jsx","className","children","_jsxs","Stack","direction","spacing","justifyContent","alignItems","overlap","anchorOrigin","vertical","horizontal","variant","Avatar","sx","bgcolor","deepOrange","SupportAgent","Typography","alignSelf","Tooltip","title","IconButton","onClick","logout","LogoutRounded","gap","padding","Box","Chip","icon","PermIdentity","label","blue","grey","StyledTextarea","TextareaAutosize","mode","onSubmit","event","preventDefault","maxRows","placeholder","type","Send","ChatHeader","ChatArea","Message"],"sourceRoot":""}